%=======================================================================================================
% This contain all the information for running main
% TEMPLATE OF THE STRUCT DATI
%=======================================================================================================
%
%  DATI= struct( 'name',              % set the name of the test  
%                'method',            % (string) e.g. 'SIP','NIP'or 'IIP'
%                'Domain',            % set the domain [x1,x2;y1,y2]
%                'exact_sol',         % set the exact solution
%                'source',            % set the forcing term
%                'grad_exact_1',      % set the first componenet of the gradient of the exact solution
%                'grad_exact_2',      % set the second componenet of the gradient of the exact solution
%                'fem',               % set finite element space (e.g.,
%                'P1', 'P2', 'P3')
%                'penalty_coeff'      % (real) penalty pearameter
%                'nqn',               % (integer) number of 1D Gauss-Ledendre quadrature nodes in 1 
%                       dimension [1,2,3,4,5,6,.....]
%                'nqn_2D',          % number of quadrature nodes for integrals over elements
%
%========================================================================================================

function [Dati]=C_dati(test)

if test=='Test1'
Dati = struct( 'name',             test,...
               ... % Test name
                'method',           'SIP',...  
               ... % Set DG discretization
               'domain',           [0,1;0,1],...                          
               ... % Domain bounds       
               'exact_sol',        'sin(pi*x).*sin(pi*y)',...      
               ... % Definition of exact solution
               'source',            '2*pi^2*sin(pi*x).*sin(pi*y)',...  
               ... % Forcing term
               'grad_exact_1',     'pi*cos(pi*x).*sin(pi*y)',...    
               ... % Definition of exact gradient (x comp) 
               'grad_exact_2',     'pi*sin(pi*x).*cos(pi*y)',...    
               ... % Definition of exact gradient (y comp)
               'fem',              'P2',...   
               ... % Finite element space (other choices 'P2', 'P3')'
               'penalty_coeff',     1,... 
               ... % Penalty coefficient
               'nqn',               4 ...
               ... % Number of 1d GL quadrature nodes
               );

elseif test=='Test2'
Dati = struct( 'name',             test,...
               ... % Test name
                'method',           'SIP',...  
               ... % Set DG discretization
               'domain',           [0,1;0,1],...                          
               ... % Domain bounds       
               'exact_sol',        'exp(-1000*(x-0.5).^2-1000*(y-0.5).^2)+sin(pi*x)',...      
               ... % Definition of exact solution
               'source',            '-4000*exp(-1000*(x-0.5).^2-1000*(y-0.5).^2)+4000000*exp(-1000*(x-0.5).^2-1000*(y-0.5).^2)*((x-0.5)^2+(y-0.5)^2)-pi^2*sin(pi*x)',...  
               ... % Forcing term
               'grad_exact_1',     '2000*(x-0.5).*(1000*(x-0.5).^2+1000*(y-0.5).^2).*exp(-1000*(x-0.5).^2-1000*(y-0.5).^2)+pi*cos(pi*x)',...    
               ... % Definition of exact gradient (x comp) 
               'grad_exact_2',     '2000*(y-0.5).*(1000*(x-0.5).^2+1000*(y-0.5).^2).*exp(-1000*(x-0.5).^2-1000*(y-0.5).^2)',...    
               ... % Definition of exact gradient (y comp)
               'fem',              'P2',...   
               ... % Finite element space (other choices 'P2', 'P3')'
               'penalty_coeff',     1,... 
               ... % Penalty coefficient
               'nqn',               4 ...
               ... % Number of 1d GL quadrature nodes
               );

elseif test=='Test3'
Dati = struct( 'name',             test,...
               ... % Test name
                'method',           'SIP',...  
               ... % Set DG discretization
               'domain',           [0,1;0,1],...                          
               ... % Domain bounds     
               'exact_sol',        'y.^0.6',...      
               ... % Definition of exact solution
               'source',            '0.6*(0.6-1)*y.^(0.6-2)',...  
               ... % Forcing term
               'grad_exact_1',     '0*x',...    
               ... % Definition of exact gradient (x comp) 
               'grad_exact_2',     '0.6*y.^(0.6-1)',...    
               ... % Definition of exact gradient (y comp)
               'fem',              'P2',...   
               ... % Finite element space (other choices 'P2', 'P3')'
               'penalty_coeff',     1,... 
               ... % Penalty coefficient
               'nqn',               4 ...
               ... % Number of 1d GL quadrature nodes
               );
           
end



