function r0t=matr0t(nx,ny,xy,nov, novc,noec,lista_coarse);
% MATR0T Constructs matrix R_H^T used in (6.3.21), pag. 373 CHQZ3
% 
% Construction of matrix R_H^T used in (6.3.21), pag. 373 CHQZ3
% 
% The Q1 solution on the coarse grid is interpolated on the fine grid
%
% called by schwarz_2d.m  and by eig_schwarz_2d.m
%
% Input: nx = polynomial degree in each element (the same in each element)
%               along x-direction
%        ny = polynomial degree in each element (the same in each element)
%               along y-direction
%        xy = 2-indexes array wiht coordinates of 2D LGL mesh
%        nov = local -global map, previously generated by cosnov_2d
%        novc(4,ne) = it maps each macro-Q1 element on the coarse mesh Q1
%        noec = number of nodes of the coarse mesh
%        lista_coarse = list of nodes of Omega wich are nodes of teh coarse mesh
%
% Output: r0t =  matrix R_H^T
%
% References: CHQZ2 = C. Canuto, M.Y. Hussaini, A. Quarteroni, T.A. Zang,
%                    "Spectral Methods. Fundamentals in Single Domains"
%                    Springer Verlag, Berlin Heidelberg New York, 2006.
%             CHQZ3 = C. Canuto, M.Y. Hussaini, A. Quarteroni, T.A. Zang,
%                    "Spectral Methods. Evolution to Complex Geometries 
%                     and Applications to Fluid DynamicsSpectral Methods"
%                    Springer Verlag, Berlin Heidelberg New York, 2007.

%   Written by Paola Gervasio
%   $Date: 2007/04/01$

noe=length(xy);
npdx=nx+1; npdy=ny+1;
[ldnov,ne]=size(nov);
mn=npdx*npdy;

x=xwlgl(npdx); y=x;
[px,py]=meshgrid(1-x,1-y); phi1=px.*py;phi1=phi1';phi1=phi1(:); clear px; clear py;
[px,py]=meshgrid(1+x,1-y); phi2=px.*py;phi2=phi2';phi2=phi2(:); clear px; clear py;
[px,py]=meshgrid(1-x,1+y); phi3=px.*py;phi3=phi3';phi3=phi3(:); clear px; clear py;
[px,py]=meshgrid(1+x,1+y); phi4=px.*py;phi4=phi4';phi4=phi4(:); clear px; clear py;
r0t=sparse(noe,noec);
for ie=1:ne
    ifine=nov(1:mn,ie);
    icoarse=novc(1:4,ie);
    r0t(ifine,icoarse)=r0t(ifine,icoarse)+0.25*[phi1,phi2,phi3,phi4];
end
    
return  
