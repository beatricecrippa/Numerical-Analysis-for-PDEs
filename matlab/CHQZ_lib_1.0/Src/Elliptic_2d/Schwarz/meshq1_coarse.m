function [lista_coarse,novc,novcg,jacxe,jacye]=meshq1_coarse(npdx,npdy,nov,xy);
% MESHQ1_COARSE Construction of structures for the coarse mesh
%
% [lista_coarse,novc,novcg,jacx,jacy]=meshq1_coarse(nov,xy,ipar);
% 
% Construction of structures for the coarse mesh
% Input:
%        npdx = number of nodes in each original spectral element (along x
%        direction)
%        npdy = number of nodes in each original spectral element (along y
%        direction)
%        nov = local -global map, previously generated by cosnov_2d
%        xy = column array with global mesh, length: noe=nov(npdx*npdy,ne)
%
% Output:
%      lista_coarse = list of nodes of Omega wich are nodes of teh coarse mesh
%      novc(4,ne) = it maps each macro-Q1 element on the coarse mesh Q1
%      novcg(4,ne) = it maps each macro-Q1 element on the fine mesh Qn
%      jacxe, jacye = jacobians of coarse (extended) Q1 mesh 
%
% References: CHQZ2 = C. Canuto, M.Y. Hussaini, A. Quarteroni, T.A. Zang,
%                    "Spectral Methods. Fundamentals in Single Domains"
%                    Springer Verlag, Berlin Heidelberg New York, 2006.
%             CHQZ3 = C. Canuto, M.Y. Hussaini, A. Quarteroni, T.A. Zang,
%                    "Spectral Methods. Evolution to Complex Geometries 
%                     and Applications to Fluid DynamicsSpectral Methods"
%                    Springer Verlag, Berlin Heidelberg New York, 2007.

%   Written by Paola Gervasio
%   $Date: 2007/04/01$

[ldnov,ne]=size(nov);
noe=length(xy);
mn=npdx*npdy;
    %ipar(7);ne=ipar(6);npdx=ipar(1);npdy=ipar(2);mn=ipar(3);
novc=zeros(4,ne);novcg=zeros(4,ne);

jacxe=zeros(ne,1); jacye=zeros(ne,1);
lista_coarse=[];
for ie=1:ne
    i1=nov(1,ie);i2=nov(npdx,ie);i3=nov(mn-npdx+1,ie);i4=nov(mn,ie);
    novcg(1:4,ie)=[i1;i2;i3;i4];
    lista_coarse=[lista_coarse;i1;i2;i3;i4];
    jacxe(ie)=(xy(i2,1)-xy(i1,1))*0.5;
    jacye(ie)=(xy(i3,2)-xy(i1,2))*0.5;
end
lista_coarse=unique(lista_coarse);
noec=length(lista_coarse);
for ie=1:ne
    for i=1:4
       knovcg=novcg(i,ie);
       trov=0;j=1;
        while j<=noec &trov==0
            if knovcg==lista_coarse(j)
                novc(i,ie)=j;
                trov=1;
            end
            j=j+1;
        end
    end
end


            
       
    

