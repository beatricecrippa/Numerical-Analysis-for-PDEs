function [ha]=plot_sem_1d(fig,ne,x,wx,xx,jacx,xy,nov,un,n_int);
%
% PLOT_SEM_1D plots SEM numerical solution for 1D boundary value problems
%
%   [ha]=plot_sem_1d(fig,ne,x,wx,xx,jacx,xy,nov,un,param);
%
% Input: fig =  figure number, set in the colling function by figure
%                command
%        ne = number of Spectral elements
%        x = LGL nodes in [-1,1]
%        wx= LGL weights in [-1,1]
%        xx = 2-indexes array of size (2,ne): xx(1:2,ie)=[xa_ie;xb_ie]
%        jacx= array (length(jacx)=ne); jacx(ie)= jacobian of 
%                of the map F_ie:[-1,1]---->[xa_ie,xb_ie]
%        xy = column array with global mesh, length: noe=nov(npdx,ne)
%        nov = local -global map, previously generated by cosnov1d
%        un = numerical solution
%        
npdx=length(x);
npdx1=param; 
u_int=zeros(npdx1,ne);
plot(xy,un,'kx'); hold 
%   interpolation
for ie=1:ne
    
x1=xwlgl(npdx1); 

uloc=un(nov(1:npdx,ie));
u_int(1:npdx1,ie)=legendre_tr_eval(x,uloc,x1);
    
x1_jac=jacx(ie)*x1+0.5*(xx(2,ie)+xx(1,ie));
plot(x1_jac,u_int(1:npdx1,ie));
end
ha=gca(fig);
return 
