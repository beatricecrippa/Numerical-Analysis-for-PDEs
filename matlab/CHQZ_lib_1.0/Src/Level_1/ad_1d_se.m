function [A]=ad_1d_se(npdx,ne,nov,nu,beta,wx,dx,jacx);
% AD_1D_SE Assembles 1D global SEM matrix associated to ad operator -nu u'' + beta u'
%
%    [A]=ad_1d_se(npdx,ne,nov,nu,beta,wx,dx,jacx); produces the matrix
%
%        A_{ij}=(nu phi_j', phi'_i)_N +beta( phi_j' ,phi_i)_N of size
%
%        (noe,noe) where noe=nov(npdx,ne) is the number of d.o.f.
%
% Input : npdx = polynomial degree in every element
%         ne = number of spectral elements
%         nov = local -global map, previously generated by cosnov1d
%         nu   = viscosity (constant>0)
%         beta = coefficient of first order term (constant)
%         wx = npdx LGL weigths in [-1,1],
%            (produced by calling [x,w]=xwlgl(npdx))
%            (npdx = number of nodes, =n+1, if n=polynomial degree)
%         dx = first derivative LGL matrix (produced by calling d=derlgl(x,npdx))
%         jacx =  jacobian of the map F:[-1,1]---->[xa_ie,b_ie]
%
% Output: A = matrix (noe,noe) 
%
%
% Reference: CHQZ2 = C. Canuto, M.Y. Hussaini, A. Quarteroni, T.A. Zang,
%                    "Spectral Methods. Fundamentals in Single Domains"
%                    Springer Verlag, Berlin Heidelberg New York, 2006.

%   Written by Paola Gervasio
%   $Date: 2007/04/01$

noe=nov(npdx,ne);
A=sparse(noe,noe);
for ie=1:ne
Al=ad_1d_sp(nu,beta,wx,dx,jacx(ie));
A(nov(1:npdx,ie),nov(1:npdx,ie))=A(nov(1:npdx,ie),nov(1:npdx,ie))+Al;
end


