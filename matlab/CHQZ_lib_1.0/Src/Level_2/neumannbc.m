function [f]=neumannbc(f,h,jacx,jacy,wx,wy,xy,ifro,nov);
% NEUMANNBC  Adds Neumann data to r.h.s.
%   Updates array f (r.h.s) with Neumann data when ifro(i)>30
%
% [f]=neumannbc(f,h,jacx,jacy,wx,wy,xy,ifro);
%
% Input: f = column array of r.h.s
%        h = @(xi,)[...] unction handle to the expression of Neumann
%              boundary data. It is a vector of 4 functions, each for any
%              side.
%         jacx = array (length(jacx)=ne); jacx(ie)= (x_V2_ie-x_V1_ie)/2
%         jacy = array (length(jacy)=ne); jacy(ie)= (y_V3_ie-y_V1_ie)/2
%         xy = column array with global mesh, length: noe=nov(npdx*npdy,ne)
%         ifro = column array of length noe=nov(npdx*npdy,ne):
%            if (x_i,y_i) is internal to Omega then ifro(i)=0,
%            if (x_i,y_i) is on \partial\Omega and Dirichlet boundary
%            condition is imposed there, then ifro(i)=1,
%            if (x_i,y_i) is on \partial\Omega and Neumann boundary
%            condition is imposed there, then ifro(i)=31,
%        nov = local -global map, previously generated by cosnov_2d
%
% Output: f = updated column array of r.h.s
%

%   Written by Paola Gervasio
%   $Date: 2007/04/01$


[ldnov,ne]=size(nov);
npdx=length(wx);
npdy=length(wy);
nm1=ldnov-npdx;
for ie=1:ne
    
    % side 1 of Omega_ie
    for i=1:npdx
        ip=nov(i,ie);
        if ifro(ip)>30
            hh=h(xy(ip,1),xy(ip,2));
            f(ip)=f(ip)+hh(1)*wx(i)*jacx(ie);
        end
    end
    % side 2 of Omega_ie
    for j=1:npdy
        ip=nov(j*npdx,ie);
        if ifro(ip)>30
            hh=h(xy(ip,1),xy(ip,2));
            f(ip)=f(ip)+hh(2)*wy(j)*jacy(ie);
        end
    end
    % side 3 of Omega_ie
    for i=1:npdx
        ip=nov(nm1+i,ie);
        if ifro(ip)>30
            hh=h(xy(ip,1),xy(ip,2));
            f(ip)=f(ip)+hh(3)*wx(i)*jacx(ie);
        end
    end
    % side 4 of Omega_ie
    for j=1:npdy
        ip=nov((j-1)*npdx+1,ie);
        if ifro(ip)>30
            hh=h(xy(ip,1),xy(ip,2));
            f(ip)=f(ip)+hh(4)*wy(j)*jacy(ie);
        end
    end
    
end
return

