function [AFE,MFE,MFEd]=femp1_preco_1d(npdx,ne,nov,jacx,xy,nu,beta,gam,param);
% FEMP1_PRECO_1D   P1 (stiffness and mass) matrices for  2-nd order 1D b.v.p. 
%
% The computational domain is split in ne
% spectral elements. In each element, P1 matrices are assembled
%
%     -nu u''+ beta*u' + gam u =f      xa < x < xb
%      
% bounadry conditions are not imposed here
%
%  [AFE,MFE,MFEd]=femp1_preco_1d(npdx,ne,nov,jacx,xy,nu,beta,gam,param);
%
% Input : npdx = number of nodes in each spectral element
%         ne = number of spectral elements
%         nov = local -global map, previously generated by cosnov1d
%         jacx = array (length(jacx)=ne); jacx(ie)= jacobian of
%                of the map F_ie:[-1,1]---->[xa_ie,xb_ie]
%         xy = column array with global mesh, length: noe=nov(npdx,ne)
%         nu   = viscosity (constant>0)
%         beta  = coefficient of first order term (constant)
%         gam   = coefficient of zeroth order term (constant>=0)
%         param = parameters array :
%          param(1)= choice of the preconditioner:
%             0 : P=I
%                 A=K_GNI
%             1 : P=K_FE            (4.4.45), pag. 221, CHQZ2
%                 A=K_GNI
%             2 : P=M_FE^{-1}K_FE   (4.4.46), pag. 221, CHQZ2
%                 A=M_GNI^{-1}K_GNI
%             3 : P=M_FE,d^{-1}K_FE   (4.4.47), pag. 221, CHQZ2
%                 A=M_GNI^{-1}K_GNI
%             4 : P=M_FE^{-1/2}K_FE M_FE^{-1/2}  (4.4.48), pag. 221, CHQZ2
%                 A=M_GNI^{-1/2}K_GNI M_GNI^{-1/2}
%             5 : P=KM_FE<d^{-1/2}K_FE M_FE,d^{-1/2}_FE (4.4.49), pag. 221, CHQZ2
%                 A=M_GNI^{-1/2}K_GNI M_GNI^{-1/2}
%
% Output: AFE = FEM Stiffness matrix K_FE (Tab. 4.6, pag. 221, CHQZ2)
%         MFE = FEM Mass matrix (Tab. 4.6, pag. 221, CHQZ2)
%         MFE = FEM Mass matrix with numerical integration 
%                      (Tab. 4.6, pag. 221, CHQZ2)
%
% Reference: CHQZ2 = C. Canuto, M.Y. Hussaini, A. Quarteroni, T.A. Zang,
%                    "Spectral Methods. Fundamentals in Single Domains"
%                    Springer Verlag, Berlin Heidelberg New York, 2006.

%   Written by Paola Gervasio
%   $Date: 2007/04/01$



noe=nov(npdx,ne);
AFE=sparse(noe,noe);
MFE=sparse(noe,noe);
MFEd=sparse(noe,noe);

for ie=1:ne
    noe_loc=npdx;
    xy_loc(1:noe_loc)=xy(nov(1:noe_loc,ie));
    ne_loc=npdx-1;
    [AFE,MFE,MFEd]=precofem_1d_se(AFE,MFE,MFEd,ne_loc,xy_loc,...
        nov(1:npdx,ie),nu,beta,gam,param);
end
return
